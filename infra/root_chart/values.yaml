serviceTree: &serviceTree
  landscape: "lapras"
  platform: "nitroso"
  service: "tin"
  layer: "2"

tags: &tags
  atomi.cloud/platform: "nitroso"
  atomi.cloud/service: "tin"
  atomi.cloud/layer: "2"

bromine:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  enable: false
  # -- Store name to create
  storeName: nitroso-tin
  # -- Secret of Secrets reference
  rootSecret:
    # -- DOPPLER Token Reference
    ref: "NITROSO_TIN"

    name: nitroso-tin-doppler

  target: &target "nitroso-tin"

cdc:
  stateful: false
  annotations:
    argocd.argoproj.io/sync-wave: "4"

  envFromSecret: *target

  jobRbac:
    create: false

  nameOverride: "tin-cdc"

  serviceTree:
    <<: *serviceTree
    module: cdc

  imagePullSecrets: []

  replicaCount: 1

  appSettings:
    app:
      module: cdc

  configMountPath: /app/config

  image:
    repository: nitroso-tin-cdc
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    create: false

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  autoscaling: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: {}

poller:
  stateful: false
  annotations:
    argocd.argoproj.io/sync-wave: "4"

  envFromSecret: *target

  jobRbac:
    create: true
    annotations:
      argocd.argoproj.io/sync-wave: "4"

  nameOverride: "tin-poller"

  serviceTree:
    <<: *serviceTree
    module: poller

  imagePullSecrets: []

  replicaCount: 1

  appSettings:
    app:
      module: poller

  configMountPath: /app/config

  image:
    repository: nitroso-tin-poller
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    create: true
    annotations:
      argocd.argoproj.io/sync-wave: "4"

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  autoscaling: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: {}

enricher:
  stateful: false
  annotations:
    argocd.argoproj.io/sync-wave: "4"

  envFromSecret: *target

  jobRbac:
    create: false

  nameOverride: "tin-enricher"

  serviceTree:
    <<: *serviceTree
    module: enricher

  imagePullSecrets: []

  replicaCount: 1

  appSettings:
    app:
      module: enricher

  configMountPath: /app/config

  image:
    repository: nitroso-tin-enricher
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    create: false

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  autoscaling: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: {}

reserver:
  stateful: true
  env:
    - name: ATOMI_RESERVER__GROUP
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
  annotations:
    argocd.argoproj.io/sync-wave: "4"

  envFromSecret: *target

  jobRbac:
    create: false

  nameOverride: "tin-reserver"

  serviceTree:
    <<: *serviceTree
    module: reserver

  imagePullSecrets: []

  replicaCount: 1

  appSettings:
    app:
      module: reserver

  configMountPath: /app/config

  image:
    repository: nitroso-tin-reserver
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    create: false

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  autoscaling: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: {}

buyer:
  annotations:
    argocd.argoproj.io/sync-wave: "4"

  envFromSecret: *target

  jobRbac:
    create: false

  nameOverride: "tin-buyer"

  serviceTree:
    <<: *serviceTree
    module: buyer

  imagePullSecrets: []

  replicaCount: 1

  appSettings:
    app:
      module: buyer

  configMountPath: /app/config

  image:
    repository: nitroso-tin-buyer
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  serviceAccount:
    create: false

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  resources: {}

  autoscaling: {}

  nodeSelector: {}

  tolerations: []

  affinity: {}

  topologySpreadConstraints: {}

zinc:
  api:
    configMountPath: /app/Config
    image:
      repository: ghcr.io/atomicloud/nitroso.zinc/api

  migration:
    enabled: false

helium:
  enable: false
  fullnameOverride: "helium-poller"
  bromine:
    target: "nitroso-helium"
    enable: true
    rootSecret:
      name: helium-doppler-secret

livecache:
  nameOverride: tin-livecache

  commonAnnotations:
    <<: *tags
    atomi.cloud/module: livecache
    argocd.argoproj.io/sync-wave: "2"
  commonLabels:
    <<: *tags
    atomi.cloud/module: livecache
  podAnnotations:
    <<: *tags
    atomi.cloud/module: livecache
    argocd.argoproj.io/sync-wave: "2"
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "250m"

  architecture: standalone
  auth:
    enabled: true
    existingSecret: *target
    existingSecretPasswordKey: ATOMI_CACHE__LIVE__PASSWORD

  master:
    persistence:
      enabled: false

  replica:
    persistence:
      enabled: false
